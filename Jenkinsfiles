pipeline {
    agent any
      tools {
        // Configuration de l'outil pip
        pip 'pip'
    } 
    environment {
        PATH = "usr/local/bin:$PATH"
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: 'main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/Abodjo27/flaskcourses.git']]])
            }
        }
        stage('Install dependencies') {
            steps {
                git branch: 'main', url: 'https://github.com/Abodjo27/flaskcourses.git'
                sh 'pip install -r requirements.txt'
            }
        }
        stage('Install corverage') {
            steps {
                sh 'pip install coverage'
            }
        }
        stage('Run tests') {
            steps {
                sh 'python3 -m pytest --junitxml=pytest-report.xml'
            }
        }
        stage('Publish test results') {
            steps {
                junit 'pytest-report.xml'
            }
        }
        stage('SonarQube analysis') {
            steps {
                script {
                    def scannerHome = tool 'SonarQube Scanner';
                    withSonarQubeEnv() {
                        sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=flaskcourses"
                    }
                }
            }
        }
        stage('Build Docker image') {
            steps {
                script {
                    def imageTag = env.BUILD_NUMBER
                    sh "docker build -t flaskcourse:${imageTag} ."
                    env.IMAGE_TAG = imageTag
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                sh '''
                    kubectl config use-context docker-desktop
                    sed "s|image: flaskcourse:latest|image: flaskcourse:${IMAGE_TAG}|g" k8s-deployment.yaml > k8s-deployment-modified.yaml
                    mv k8s-deployment-modified.yaml k8s-deployment.yaml
                    kubectl apply -f k8s-deployment.yaml
                '''
            }
        }
    }
}
